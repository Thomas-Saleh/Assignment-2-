{"ast":null,"code":"var _jsxFileName = \"/Users/thomassaleh/Desktop/Assignment-2-/s4006031-s3928350-a2/src/pages/SpecialDeals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpecialDeals() {\n  _s();\n  // State to hold the randomly selected product\n  const [randomProducts, setRandomProducts] = useState([]);\n  const discountRate = 0.4; // 20% discount\n  const numOfSpecials = 5;\n  useEffect(() => {\n    // Retrieve vegetables from localStorage\n    const storedVegetables = localStorage.getItem('vegetables');\n    const vegetables = storedVegetables ? JSON.parse(storedVegetables) : [];\n\n    // Shuffle the vegetables array sourced from ChatGPT asked how to randomly select items from an array\n    const shuffledVegetables = vegetables.sort(() => Math.random() - 0.5);\n\n    // Select the first numOfSpecials vegetables\n    const selectedVegetables = shuffledVegetables.slice(0, numOfSpecials).map(vegetable => {\n      // Apply discount to the price\n      const discountedPrice = vegetable.price * (1 - discountRate);\n      return {\n        ...vegetable,\n        price: discountedPrice\n      };\n    });\n\n    // Store the selected special deal products in localStorage\n    localStorage.setItem('specialDeals', JSON.stringify(selectedVegetables));\n    setRandomProducts(selectedVegetables);\n  }, []);\n  const [quantities, setQuantities] = useState({});\n\n  // Function to handle quantity change of a product\n  const handleQuantityChange = (productName, quantity) => {\n    setQuantities(prevState => ({\n      ...prevState,\n      [productName]: quantity\n    }));\n  };\n\n  // Function to add a product to the cart\n  const addToCart = product => {\n    const sessionToken = localStorage.getItem('sessionToken');\n    if (!sessionToken) {\n      alert('You must be logged in to add items to the cart.');\n      window.location.href = '/sign-in';\n      return;\n    }\n    const quantity = quantities[product.name] || 1; // Default quantity is 1\n    console.log(`Added ${quantity} ${product.name} to cart`);\n    let cartItems = JSON.parse(localStorage.getItem('cart')) || [];\n    const existingItems = cartItems.findIndex(item => item.name === product.name);\n    if (existingItems !== -1) {\n      cartItems[existingItems].quantity += quantity;\n    } else {\n      cartItems.push({\n        ...product,\n        quantity\n      });\n    }\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-500 text-white py-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold text-center\",\n        children: \"Special Deals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), \"      \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 justify-center\",\n      children: randomProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-200 p-4 flex flex-col items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.imageUrl,\n          alt: product.name,\n          className: \"w-32 h-32 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-red-500\",\n            children: [\"Special Price: $\", product.price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            value: quantities[product.name] || '',\n            onChange: e => handleQuantityChange(product.name, parseInt(e.target.value)),\n            className: \"mt-2 w-16 text-center border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",\n          onClick: () => addToCart(product),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(SpecialDeals, \"xL0G7IOqF/KCqpXaYX1znjt2Lgk=\");\n_c = SpecialDeals;\nexport default SpecialDeals;\nvar _c;\n$RefreshReg$(_c, \"SpecialDeals\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SpecialDeals","_s","randomProducts","setRandomProducts","discountRate","numOfSpecials","storedVegetables","localStorage","getItem","vegetables","JSON","parse","shuffledVegetables","sort","Math","random","selectedVegetables","slice","map","vegetable","discountedPrice","price","setItem","stringify","quantities","setQuantities","handleQuantityChange","productName","quantity","prevState","addToCart","product","sessionToken","alert","window","location","href","name","console","log","cartItems","existingItems","findIndex","item","push","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","imageUrl","alt","toFixed","type","min","value","onChange","e","parseInt","target","onClick","id","_c","$RefreshReg$"],"sources":["/Users/thomassaleh/Desktop/Assignment-2-/s4006031-s3928350-a2/src/pages/SpecialDeals.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nfunction SpecialDeals () {\n  // State to hold the randomly selected product\n  const [randomProducts, setRandomProducts] = useState([]);\n  const discountRate = 0.4; // 20% discount\n  const numOfSpecials = 5;\n\n\n  useEffect(() => {\n    // Retrieve vegetables from localStorage\n    const storedVegetables = localStorage.getItem('vegetables');\n    const vegetables = storedVegetables ? JSON.parse(storedVegetables) : [];\n    \n    // Shuffle the vegetables array sourced from ChatGPT asked how to randomly select items from an array\n    const shuffledVegetables = vegetables.sort(() => Math.random() - 0.5);\n\n    // Select the first numOfSpecials vegetables\n    const selectedVegetables = shuffledVegetables.slice(0, numOfSpecials).map(vegetable => {\n      // Apply discount to the price\n      const discountedPrice = vegetable.price * (1 - discountRate);\n      return { ...vegetable, price: discountedPrice };\n    });\n    \n    // Store the selected special deal products in localStorage\n    localStorage.setItem('specialDeals', JSON.stringify(selectedVegetables));\n\n    setRandomProducts(selectedVegetables);\n  }, []);\n\n  const [quantities, setQuantities] = useState({});\n  \n  \n  // Function to handle quantity change of a product\n  const handleQuantityChange = (productName, quantity) => {\n    setQuantities(prevState => ({\n      ...prevState,\n      [productName]: quantity\n    }));\n  };\n\n  // Function to add a product to the cart\n  const addToCart = (product) => {\n    const sessionToken = localStorage.getItem('sessionToken');\n    if (!sessionToken) {\n      alert('You must be logged in to add items to the cart.');\n      window.location.href = '/sign-in';\n      return;\n    }\n    \n    const quantity = quantities[product.name] || 1; // Default quantity is 1\n    console.log(`Added ${quantity} ${product.name} to cart`);\n    let cartItems = JSON.parse(localStorage.getItem('cart')) || [];\n    const existingItems = cartItems.findIndex(item => item.name === product.name);\n    if (existingItems !== -1) {\n      cartItems[existingItems].quantity += quantity;\n    } else {\n      cartItems.push({ ...product, quantity });\n    }\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  };\n\n  return (\n    <div>\n    <div className=\"bg-green-500 text-white py-4\">\n        <h1 className=\"text-3xl font-semibold text-center\">Special Deals</h1>\n      </div>      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 justify-center\">\n        {/* Display the shuffled and selected vegetables with discounted prices */}\n        {randomProducts.map((product) => (\n          <div key={product.id} className=\"bg-gray-200 p-4 flex flex-col items-center justify-between\">\n            <img src={product.imageUrl} alt={product.name} className=\"w-32 h-32 rounded-full\" />\n            <div className=\"text-center\">\n              <h2 className=\"text-lg font-semibold\">{product.name}</h2>\n              <p className=\"text-sm text-red-500\">Special Price: ${product.price.toFixed(2)}</p>\n              <input\n                type=\"number\"\n                min=\"1\"\n                value={quantities[product.name] || ''}\n                onChange={(e) => handleQuantityChange(product.name, parseInt(e.target.value))}\n                className=\"mt-2 w-16 text-center border border-gray-300 rounded\"\n              />\n            </div>\n            <button className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\" onClick={() => addToCart(product)}>\n            Add to Cart\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n    \n  );\n}\n\nexport default SpecialDeals;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}